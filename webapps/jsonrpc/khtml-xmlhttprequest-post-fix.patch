--- kdelibs-cvs/khtml/ecma/xmlhttprequest.h	2004-11-11 12:34:28.000000000 +0800
+++ kdelibs-3.3.2/khtml/ecma/xmlhttprequest.h	2005-01-23 06:14:45.000000000 +0800
@@ -98,6 +98,7 @@
     QString method;
     bool async;
     QString requestHeaders;
+    QString contentType;
 
     KIO::TransferJob * job;
 
--- kdelibs-cvs/khtml/ecma/xmlhttprequest.cpp	2004-12-08 09:32:46.000000000 +0800
+++ kdelibs-3.3.2/khtml/ecma/xmlhttprequest.cpp	2005-01-23 08:12:15.000000000 +0800
@@ -216,6 +216,7 @@
     qObject(new XMLHttpRequestQObject(this)),
     doc(static_cast<DOM::DocumentImpl*>(d.handle())),
     async(true),
+    contentType(QString::null),
     job(0),
     state(Uninitialized),
     onReadyStateChangeListener(0),
@@ -308,6 +309,10 @@
   if (method.lower() == "post" && (url.protocol().lower() == "http" || url.protocol().lower() == "https") ) {
       // FIXME: determine post encoding correctly by looking in headers for charset
       job = KIO::http_post( url, QCString(_body.utf8()), false );
+      if(contentType == QString::null)
+	job->addMetaData( "content-type", "Content-type: text/plain" );
+      else
+	job->addMetaData( "content-type", contentType );
   }
   else
   {
@@ -368,6 +373,11 @@
 
 void XMLHttpRequest::setRequestHeader(const QString& name, const QString &value)
 {
+  // Content-type needs to be set seperately from the other headers
+  if(name.lower() == "content-type") {
+    contentType = "Content-type: " + value;
+    return;
+  }
   if (requestHeaders.length() > 0) {
     requestHeaders += "\r\n";
   }
