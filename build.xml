<!--

  jabsorb - a Java to JavaScript Advanced Object Request Broker
  http://www.jabsorb.org

  Copyright 2007 Arthur Blake and William Becker

  based on original code from
  JSON-RPC-Java - a JSON-RPC to Java Bridge with dynamic invocation

  Copyright Metaparadigm Pte. Ltd. 2004.
  Michael Clark <michael@metaparadigm.com>

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  Ant build script for Apache Ant version 1.6.5 or 1.7

-->
<project name="jabsorb" default="dist" basedir=".">

  <!-- Tomcat 5.x classpath and installpath -->
  <property name="tomcat" location="/opt/apache-tomcat-5.5.23"/>
  <property name="installpath" location="${tomcat}/webapps"/>
  <path id="myclasspath">
    <fileset dir="${tomcat}/common/lib"><include name="**/*.jar"/></fileset>
    <fileset dir="${tomcat}/bin"><include name="**/*.jar"/></fileset>
    <fileset dir="./lib"><include name="**/*.jar"/></fileset>
  </path>

  <property name="version" value="svn-trunk"/>
  <property name="app-prefix" value="jabsorb-${version}"/>
  <property name="app-jar" value="${app-prefix}.jar"/>
  <property name="app-war" value="${app-prefix}.war"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init">
    <javac debug="true" source="1.4"
           srcdir="${src}" destdir="${build}">
      <classpath refid="myclasspath"/>
    </javac>
  </target>

  <target name="dist" depends="compile">
    <jar destfile="${app-jar}" basedir="${build}" excludes="*~"/>
  </target>

  <property name="webapp" location="webapps/jsonrpc"/>
  <property name="webinf" location="${webapp}/WEB-INF"/>
  <property name="test.src" location="test/src"/>
  <property name="test.rsrc" location="test/rsrc"/>
  <property name="test.lib" location="${webinf}/lib"/>
  <property name="test.classes" location="${webinf}/classes"/>
  <property name="jsp.out" location="test/jsp"/>

  <target name="test.init">
    <tstamp/>
    <mkdir dir="${test.lib}"/>
    <mkdir dir="${test.classes}"/>
    <mkdir dir="${jsp.out}"/>
  </target>

  <target name="compile.test" depends="test.init">
    <javac debug="true" source="1.4"
           srcdir="${test.src}" destdir="${test.classes}">
      <classpath>
        <path refid="myclasspath"/>
        <pathelement path="${app-jar}"/>
      </classpath>
    </javac>
  </target>

  <target name="test.jsp" depends="compile.test">
    <taskdef classname="org.apache.jasper.JspC" name="jasper2">
      <classpath>
        <path refid="myclasspath"/>
        <pathelement path="${app-jar}"/>
      </classpath>
    </taskdef>
    <jasper2 validateXml="false" uriroot="${webapp}" package=""
             webXmlFragment="${webinf}/web.xml.generated"
             outputDir="${jsp.out}"/>
    <copy file="${test.src}/org/jabsorb/jsonrpc/test/Hello.java"
          tofile="${webapp}/Hello.java.txt"/>
    <copy file="${webapp}/hello.jsp" tofile="${webapp}/hello.jsp.txt"/>
    <copy file="${webapp}/hello.js" tofile="${webapp}/hello.js.txt"/>
    <copy file="${test.src}/org/jabsorb/jsonrpc/test/Test.java"
          tofile="${webapp}/Test.java.txt"/>
    <copy file="${webapp}/test.jsp" tofile="${webapp}/test.jsp.txt"/>
    <copy file="${webapp}/test.js" tofile="${webapp}/test.js.txt"/>
    <copy file="${webapp}/jsonrpc.js" tofile="${webapp}/jsonrpc.js.txt"/>
    <copy file="${webinf}/web.xml" tofile="${webinf}/web.xml.out"/>
    <loadfile property="generated_web.xml" 
              srcFile="${webapp}/WEB-INF/web.xml.generated"/>
    <replace file="${webapp}/WEB-INF/web.xml.out" 
             token="&lt;!--GENERATED_JSPS--&gt;" 
             value="${generated_web.xml}" />
  </target>

  <target name="compile.jsp" depends="test.jsp">
    <javac debug="true" source="1.4" 
           srcdir="${jsp.out}" destdir="${test.classes}">
      <classpath>
        <path refid="myclasspath"/>
        <pathelement path="${app-jar}"/>
      </classpath>
    </javac>
  </target>

  <target name="test.dist" depends="dist,compile.jsp">
    <copy file="${app-jar}" tofile="${webinf}/lib/${app-jar}"/>
    <copy todir="${test.lib}">
      <fileset dir="./lib">
        <include name="**/*.jar"/>
      </fileset>
    </copy>
    <jar destfile="${test.lib}/rsrc.jar" basedir="${test.rsrc}"
         excludes="*~"/>
    <war destfile="${app-war}" basedir="${webapp}"
         excludes="**/*~,**/*.jsp,WEB-INF/web.xml*"
         webxml="${webapp}/WEB-INF/web.xml.out"/>
  </target>

  <target name="docs">
    <javadoc source="1.4"
             sourcepath="${src}"
             destdir="${webapp}/docs"
             public="true"
             nodeprecated="true"
             windowtitle="JSON-RPC-Java API">
      <classpath>
        <path refid="myclasspath"/>
        <pathelement path="${app-jar}"/>
      </classpath>
      <package name="org.jabsorb.jsonrpc" />
      <package name="org.jabsorb.jsonrpc.reflect" />
      <package name="org.jabsorb.jsonrpc.callback" />
      <package name="org.jabsorb.jsonrpc.localarg" />
      <package name="org.jabsorb.jsonrpc.localarg.impl" />
      <package name="org.jabsorb.jsonrpc.serializer" />
      <package name="org.jabsorb.jsonrpc.serializer.impl" />
      <package name="org.jabsorb.json" />
      <!-- link href="http://java.sun.com/j2se/1.4.2/docs/api/" / -->
      <!-- link href="http://java.sun.com/products/servlet/2.2/javadoc/" / -->
      <doctitle><![CDATA[<h1>jabsorb API Documentation</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2007 Arthur Blake and William Becker.</i>]]></bottom>
     </javadoc>
  </target>


  <target name="install" depends="test.dist">
    <copy file="${app-war}" todir="${installpath}"/>
  </target>

  <target name="uninstall">
    <delete file="${installpath}/${app-war}"/>
    <delete dir="${installpath}/${app-prefix}/"/>
  </target>

  <target name="clean">
    <delete file="${app-war}"/>
    <delete file="${app-jar}"/>
    <delete file="${webapp}/WEB-INF/web.xml.out"/>
    <delete file="${webapp}/WEB-INF/web.xml.generated"/>
    <delete file="${webapp}/Test.java.txt"/>
    <delete file="${webapp}/test.jsp.txt"/>
    <delete file="${webapp}/test.js.txt"/>
    <delete file="${webapp}/jsonrpc.js.txt"/>
    <delete>
      <fileset dir="." defaultexcludes="no">
        <include name="**/*~"/>
      </fileset>
    </delete>
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${build}"/>
      <fileset dir="${webapp}/docs"/>
      <fileset dir="${test.lib}"/>
      <fileset dir="${test.classes}"/>
      <fileset dir="${jsp.out}"/>
    </delete>
  </target>

</project>
